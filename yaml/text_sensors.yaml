############################## Text Sensoren ########################################
text_sensor:
  - platform: template
    name: "Betriebsmodus"
    id: text_betriebsmodus
    lambda: |-
      switch ((uint32_t)id(Betriebsmodus).state)
      {
      case 0:  return {"Notbetrieb"};
      case 1:  return {"Bereitschaft"};
      case 3:  return {"Heizen"};
      case 4:  return {"Absenken"};
      case 5:  return {"Sommer"};
      case 11: return {"Automatik 1"};
      case 12: return {"Automatik 2"};
      case 17: return {"Kühlen"};
      default:
        return {"Unknown"};
      }

  - platform: template
    name: "SG-Modus"
    id: text_sg_modus
    lambda: |-
      switch ((uint32_t)id(SGModus).state)
      {
      case 0: return {"Aus"};
      case 1: return {"SG Modus 1"};
      case 2: return {"SG Modus 2"};
      default:
        return {"Unknown"};
      }

  - platform: template
    name: "Smart-Grid"
    id: text_smartgrid
    lambda: |-
      switch ((uint32_t)id(Smartgrid).state)
      {
      case 0: return {"Aus"};
      case 1: return {"An"};
      default:
        return {"Unknown"};
      }

  - platform: template
    name: "Betriebsart"
    id: text_betriebsart
    lambda: |-
      switch ((uint32_t)id(Betriebsart).state)
      {
      case 0: return {"Standby"};
      case 1: return {"Heizen"};
      case 2: return {"Kühlen"};
      case 3: return {"Abtauen"};
      case 4: return {"Warmwasserbereitung"};
      default:
        return {"Unknown"};
      }

  - platform: template
    name: "Fehlercode"
    id: text_fehler
    lambda: |-
      switch ((uint32_t)id(Fehlercode).state)
      {
      case 0: return {"kein Fehler"};
      case 9001: return {"E9001 Rücklauffühler Handbuch S.60"};
      case 9002: return {"E9002 Vorlauffühler Handbuch S.60"};
      case 9003: return {"E9003 Frostschutzfunktion Handbuch S.60"};
      case 9004: return {"E9004 Durchfluss Handbuch S.61"};
      case 9005: return {"E9005 Vorlauftemperaturfühler Handbuch S.60"};
      case 9006: return {"E9006 Vorlauftemperaturfühler Handbuch S.60"};
      case 9007: return {"E9007 Platine IG defekt Handbuch S.60"};
      case 9008: return {"E9008 Kältemitteltemperatur außerhalb des Bereiches Handbuch S.60"};
      case 9009: return {"E9009 STB Fehler Handbuch S.60"};
      case 9010: return {"E9010 STB Fehler Handbuch S.60"};
      case 9011: return {"E9011 Fehler Flowsensor Handbuch S.60"};
      case 9012: return {"E9012 Fehler Vorlauffühler Handbuch S.60"};
      case 9013: return {"E9013 Platine AG defekt Handbuch S.60"};
      case 9014: return {"E9014 P-Kältemittel hoch Handbuch S.61"};
      case 9015: return {"E9015 P-Kältemittel niedrig Handbuch S.61"};
      case 9016: return {"E9016 Lastschutz Verdichter Handbuch S.61"};
      case 9017: return {"E9017 Ventilator blockiert Handbuch S.61"};
      case 9018: return {"E9018 Expansionsventil Handbuch S.61"};
      case 9019: return {"E9019 Warmwassertemperatur > 85°C Handbuch S.61"};
      case 9020: return {"E9020 T-Verdampfer hoch Handbuch S.61"};
      case 9021: return {"E9021 HPS-System Handbuch S.61"};
      case 9022: return {"E9022 Fehler AT-Fühler Handbuch S.62"};
      case 9023: return {"E9023 Fehler WW-Fühler Handbuch S.62"};
      case 9024: return {"E9024 Drucksensor Handbuch S.62"};
      case 9025: return {"E9025 Fehler Rücklauffühler Handbuch S.62"};
      case 9026: return {"E9026 Drucksensor Handbuch S.62"};
      case 9027: return {"E9027 Aircoil-Fühler Defrost Handbuch S.62"};
      case 9028: return {"E9028 Aircoil-Fühler temp Handbuch S.62"};
      case 9029: return {"E9029 Fehler Kältefühler AG handbuch S.62"};
      case 9030: return {"E9030 Defekt elektrisch Handbuch S.63"};
      case 9031: return {"E9031 Defekt elektrisch Handbuch S.63"};
      case 9032: return {"E9032 Defekt elektrisch Handbuch S.63"};
      case 9033: return {"E9033 Defekt elektrisch Handbuch S.63"};
      case 9034: return {"E9034 Defekt elektrisch Handbuch S.63"};
      case 9035: return {"E9035 Platine AG defekt Handbuch S.63"};
      case 9036: return {"E9036 Defekt elektrisch Handbuch S.63"};
      case 9037: return {"E9037 Einstellung Leistung Handbuch S.63"};
      case 9038: return {"E9038 Kältemittel Leck Handbuch S.64"};
      case 9039: return {"E9039 Unter/Überspannung Handbuch S.64"};
      case 9041: return {"E9041 Übertragungsfehler Handbuch S.64"};
      case 9042: return {"E9042 Übertragungsfehler Handbuch S.64"};
      case 9043: return {"E9043 Übertragungsfehler Handbuch S.64"};
      case 9044: return {"E9044 Übertragungsfehler Handbuch S.64"};
      case 75: return {"E75 Fehler Außentemperaturfühler Handbuch S.64"};
      case 76: return {"E76 Fehler Speichertemperaturfühler Handbuch S.64"};
      case 81: return {"E81 Kommunikationsfehler Rocon Handbuch S.64"};
      case 88: return {"E88 Kommunikationsfehler Rocon Handbuch S.6"};
      case 91: return {"E91 Kommunikationsfehler Rocon Handbuch S.6"};
      case 128: return {"E128 Fehler Rücklauftemperaturfühler Handbuch S.64"};
      case 129: return {"E129 Fehler Drucksensor Handbuch S.64"};
      case 198: return {"E198 Durchflussmessung nicht plausibel Handbuch S.65"};
      case 200: return {"E200 Kommunikationsfehler Handbuch S.65"};
      case 8005: return {"E8005 Wasserdruck in Heizungsanlage zu gering Handbuch S.65"};
      case 8100: return {"E8100 Kommunikation Handbuch S.65"};
      case 9000: return {"E9000 Interne vorübergehende Meldung Handbuch S65"};
      case 8006: return {"W8006 Warnung Druckverlust Handbuch S.65"};
      case 8007: return {"W8007 wasserdruck in Anlage zu hoch Handbuch S.65"};
      default:
        return {"Unknown"};
      }

  - platform: template
    name: "Status Kesselpumpe"
    id: text_status2
    lambda: |-
      switch ((uint32_t)id(status_kessel).state)
      {
      case 0: return {"Aus"};
      case 1: return {"An"};
      default: return {"Unknown"};
      }

  - platform: template
    name: "Status Kompressor"
    id: text_status3
    lambda: |-
      switch ((uint32_t)id(status_kompressor).state)
      {
      case 0: return {"Aus"};
      case 1: return {"An"};
      default: return {"Unknown"};
      }

  - platform: template
    name: "HK-Funktion"
    id: text_hk_funktion
    lambda: |-
      switch ((uint32_t)id(hk_funktion).state)
      {
      case 0: return {"Witterungsgeführt"};
      case 1: return {"Fest"};
      default: return {"Unknown"};
      }

  - platform: wifi_info
    ip_address:
      name: ESP IP Address
    ssid:
      name: ESP Connected SSID